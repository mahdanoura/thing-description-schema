---
id: td
name: thing-description-schema
title: thing-description-schema
description: |-
  LinkML schema for modelling the Web of Things Thing Description information model. This schema is used to generate
  JSON Schema, SHACL shapes, and RDF.
license: MIT
see_also:
  - https://www.w3.org/TR/wot-thing-description11/

prefixes:
  linkml:
    prefix_prefix: linkml
    prefix_reference: https://w3id.org/linkml/
  td:
    prefix_prefix: td
    prefix_reference: https://www.w3.org/2019/wot/td#
  jsonschema:
    prefix_prefix: jsonschema
    prefix_reference: https://www.w3.org/2019/wot/json-schema#
  wotsec:
    prefix_prefix: wotsec
    prefix_reference: https://www.w3.org/2019/wot/security#
  hctl:
    prefix_prefix: hctl
    prefix_reference: https://www.w3.org/2019/wot/hypermedia#
  rdfs:
    prefix_prefix: rdfs
    prefix_reference: http://www.w3.org/2000/01/rdf-schema#
  rdf:
    prefix_prefix: rdf
    prefix_reference: http://www.w3.org/1999/02/22-rdf-syntax-ns#
  dcterms:
    prefix_prefix: dcterms
    prefix_reference: http://purl.org/dc/terms/
  schema:
    prefix_prefix: schema
    prefix_reference: http://schema.org/
  xsd:
    prefix_prefix: xsd
    prefix_reference: http://www.w3.org/2001/XMLSchema#
  dct:
    prefix_prefix: dct
    prefix_reference: http://purl.org/dc/terms/
  htv:
    prefix_prefix: htv
    prefix_reference: http://www.w3.org/2011/http#
  tm:
    prefix_prefix: tm
    prefix_reference: https://www.w3.org/2019/wot/tm#
default_prefix: td
default_range: string

imports:
  - linkml:types

types:
  anyUri:
    name: anyUri
    description: a complete URI
    uri: xsd:anyURI
    base: URI

slots:
  id:
    identifier: true
    description: TODO
    range: anyUri
    slot_uri: td:id
  title:
    description: >-
      Provides a human-readable title (e.g., display a text for UI representation) based on a default language.
    range: MultiLanguage
    required:
    slot_uri: td:title
  description:
    range: MultiLanguage
  titles:
    multivalued: true
    range: MultiLanguage
    inlined: true
  descriptions:
    description: >- 
      TODO, check, according to the description a description should not contain a lang tag.
    multivalued: true
    range: MultiLanguage
    inlined: true
  descriptionInLanguage:
    description: >-
      description of the TD element (Thing, interaction affordance, security scheme or data scheme) with language tag. By
      convention, a language tag must be added to the object of descriptionInLanguage. Otherwise use description.
    range: MultiLanguage
  titleInLanguage:
    description: >-
      title of the TD element (Thing, interaction affordance, security scheme or data scheme) with language tag. By
      convention, a language tag must be added to the object of descriptionInLanguage. Otherwise use description.
    range: MultiLanguage
  "@type":
    multivalued: true
  target:
    description: >-
      Target IRI of a link or submission target of a Form
    slot_uri: hctl:target
    required: true
    range: anyUri

classes:

  VersionInfo:
    class_uri: schema:version
    description: >-
      Provides version information.
    attributes:
      instance:
        required: true
      model:

  MultiLanguage:
    attributes:
      key:
        identifier: true
        pattern: "^(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"

  Link:
    class_uri: hctl:Link
    description: >-
      A link can be viewed as a statement of the form link context that has a relation type resource at link target", where the optional target attributes may further describe the resource.
    attributes:
      hintsAtMediaType:
        description: Target attribute providing a hint indicating what the media type [IANA-MEDIA-TYPES] of the result of dereferencing the link should be.
        from_schema: hctl
      type:
      relation:
        description: >-
          A link relation type identifies the semantics of a link.
        from_schema: hctl
      anchor:
        description: >-
          By default, the context, or anchor, of a link conveyed in the Link header field is the URL of the representation it is associated with, as defined in RFC7231, Section 3.1.4.1, and is serialized as a URI.
        from_schema: hctl
        range: anyUri
      sizes:
        description: >-
          Target attribute that specifies one or more sizes for the referenced icon. Only applicable for relation type 'icon'. The value pattern follows {Height}x{Width} (e.g., \"16x16\", \"16x16 32x32\").
        from_schema: hctl
      hreflang:
        description: >-
          The hreflang attribute specifies the language of a linked document. The value of this must be a valid language tag [[BCP47]].
        from_schema: hctl
        pattern: "^(((([A-Za-z]{2,3}(-([A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-([A-Za-z]{4}))?(-([A-Za-z]{2}|[0-9]{3}))?(-([A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-([0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(x(-[A-Za-z0-9]{1,8})+))?)|(x(-[A-Za-z0-9]{1,8})+)|((en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang)))$"
    slots:
      - target

  ExpectedResponse:
    class_uri: hctl:ExpectedResponse
    description: >-
      Communication metadata describing the expected response message for the primary response.
    attributes:
      contentType:
        description: >-
          TODO Check, was not in hctl ontology, if not could be source of discrepancy
        required: true

  AdditionalExpectedResponse:
    class_uri: hctl:AdditionalExpectedResponse
    description: >-
      Communication metadata describing the expected response message for additional responses.
    is_a: ExpectedResponse
    attributes:
      additionalOutputSchema:
        description: >-
          This optional term can be used to define a data schema for an additional response if it differs from the default
          output data schema. Rather than a DataSchema object, the name of a previous definition given in a SchemaDefinitions
          map must be used.
      success:
        description: >-
          Signals if the additional response should not be considered an error.
        range: boolean
      schema:
        description: >-
          TODO Check, was not in hctl ontology, if not could be source of discrepancy
  

  Form:
    class_uri: hctl:Form
    description: >-
      A form can be viewed as a statement of to perform an operation type on form context, 
      make a request method to submission target, where the optional form fields
      may further describe the required request. In Thing Descriptions, the form context is the surrounding Object, 
      such as Properties, Actions, and Events or the Thing itself for meta-interactions.
    attributes:
      href:
        required: true
        range: anyUri
      contentType:
        from_schema: hctl
        description: >-
          Assign a content type based on a media type IANA-MEDIA-TYPES (e.g., 'text/plain') and potential parameters 
          (e.g., 'charset=utf-8') for the media type.
      contentCoding:
        description: >-
          Content coding values indicate an encoding transformation that has been or can be applied to a representation. 
          Content codings are primarily used to allow a representation to be compressed or otherwise usefully transformed 
          without losing the identity of its underlying media type and without loss of information. Examples of content
          coding include \"gzip\", \"deflate\", etc.
        from_schema: hctl
      securityDefinitions:
        description: >-
          A security schema applied to a (set of) affordance(s).
        from_schema: td:hasSecurityConfiguration
      scopes:
        description: >-
          TODO Check, was not in hctl ontology, if not could be source of discrepancy
      returns:
        description: >-
          This optional term can be used if, e.g., the output communication metadata differ from input metadata (e.g., output contentType differ from the
          input contentType). The response name contains metadata that is only valid for the response messages.
        range: ExpectedResponse
      additionalReturns:
        description: >-
          This optional term can be used if additional expected responses are possible, e.g. for error reporting. Each
          additional response needs to be distinguished from others in some way (for example, by specifying a protocol-specific
          response code), and may also have its own data schema.
        from_schema: hctl
        range: AdditionalExpectedResponse
        multivalued: true
      subprotocol:
        from_schema: hctl
        description: >-
          Indicates the exact mechanism by which an interaction will be accomplished for a given protocol when there
          are multiple options.
      operationType:
        description:
          Indicates the semantic intention of performing the operation(s) described by the form.
        from_schema: hctl
        multivalued: true
        range: OperationTypes
    slots:
      - target

  SecurityScheme:
    slots:
      - "@type"
      - descriptions
    attributes:
      description:
      proxy:
        description: >-
          URI of the proxy server this security configuration provides access to. If not given, the corresponding security configuration
          is for the endpoint.
        range: anyUri
      scheme:
        required: true
        range: SecuritySchemeType

  DataSchema:
    class_uri: jsonschema:DataSchema
    description: >-
      Metadata that describes the data format used. It can be used for validation.
    attributes:
      propertyName:
        description: >-
          Used to store the indexing name in the parent object when this schema appears as a property of an object schema.
      writeOnly:
        description: >-
          Boolean value that is a hint to indicate whether a property interaction/value is write only (=true) or not (=false).
      readonly:
        description: >-
          Boolean value that is a hint to indicate whether a property interaction/value is read only (=true) or not (=false).
    slots:
      - description
      - title
      - titleInLanguage
      - descriptionInLanguage


  InteractionAffordance:
    description: >-
      TOOD
    class_uri: td:InteractionAffordance
    attributes:
      name:
        description: >-
          Indexing property to store entity names when serializing them in a JSON-LD @index container.
        identifier: true
      uriVariables:
        description: >-
          Define URI template variables according to RFC6570 as collection based on schema specifications. The individual
          variables DataSchema cannot be an ObjectSchema or an ArraySchema. TODO: range is not obvious from the ontology.
        from_schema: td:hasUriTemplateSchema
        multivalued: true
        range: DataSchema
      forms:
        from_schema: td:hasForm
        description: >-
          Set of form hypermedia controls that describe how an operation can be performed.
        required:
        multivalued: true
        range: Form
    slots:
      - titles
      - descriptions
      - title
      - description
      - titleInLanguage
      - descriptionInLanguage

  PropertyAffordance:
    is_a: InteractionAffordance
    class_uri: td:PropertyAffordance
    description: >-
      An Interaction Affordance that exposes state of the Thing. This state can be retrieved (read) and/or updated.
    mixins: DataSchema
    attributes:
      observable:
        description: >-
          A hint that indicates whether Servients hosting the Thing and Intermediaries should probide a Protocol Binding 
          that supports the observeproperty and unobserveproperty operations for this Property.
        range: boolean

  ActionAffordance:
    is_a: InteractionAffordance
    class_uri: td:ActionAffordance
    description: >-
      An Interaction Affordance that allows to invoke a function of the Thing, which manipulates state (e.g., toggling a lamp
      on or off) or triggers a process on the Thing (e.g., dim a lamp over time).
    attributes:
      safe:
        description: >-
          Signals if the action is safe (=true) or not. Used to signal if there is no internal state (cf. resource state)
          is changed when invoking an Action.
        from_schema: td:isSafe
        range: boolean
      synchronous:
        description: >-
          Indicates whether the action is synchronous (=true) or not. A synchronous action means that the response of action
          contains all the information about the result of the action and no further querying about the status of the action
          is needed. Lack of this keyword means that no claim on the synchronicity of the action can be made.
        from_schema: td:isSynchronous
        range: boolean
      idempotent:
        description: >-
          Indicates whether the action is idempotent (=true) or not. Informs whether the action can be called repeatedly with the same
          results, if present, based on the same input.
        from_schema: td:isIdempotent
        range: boolean
      input:
        description: >-
          Used to define the input data schema of the action.
        from_schema: td:hasInputSchema
        range: DataSchema
      output:
        description: >-
          Used to define the output data schema of the action.
        from_schema: td:hasOutputSchema
        range: DataSchema

  EventAffordance:
    is_a: InteractionAffordance
    class_uri: td:EventAffordance
    description: >-
      An Interaction Affordance that describes an event source, which asynchronously pushes event data to Consumers
      (e.g., overhearing alerts).
    attributes:
      subscription:
        description: >-
          Defines data that needs to be passed upon subscription, e.g., filters or message format for setting up Webhooks.
        from_schema: td:hasSubscriptionSchema
        range: DataSchema
      cancellation:
        description: >-
          Defines any data that needs to be passed to cancel a subscription, e.g., a specific message to remove a Webhook.
        from_schema: td:hasCancellationSchema
        range: DataSchema
      notification:
        description: >-
          Defines the data schema of the Event instance messages pushed by the Thing.
        from_schema: td:hasNotificationSchema
        range: DataSchema
      notificationResponse:
        description: >-
          Defines the data schema of the Event response messages sent by the consumer in a response to a data message.
        from_schema: td:hasNotificationResponseSchema
        range: DataSchema

  Thing:
    description: >-
      An abstraction of a physical or a virtual entity whose metadata and interfaces are described by a WoT Thing
      Description, whereas a virtual entity is the composition of one or more Things.
    class_uri: td:Thing
    attributes:
      securityDefinitions:
        description: >- 
          A security scheme applied to a (set of) affordance(s). TODO check
        from_schema: td:hasSecurityConfiguration
        required:
        multivalued: true
        any_of:
          - range: string
          - range: SecuritySchemeType
      security:
        description: >-
          A Thing may define abstract security schemes, used to configure the secure access of (a set of) affordance(s).
          TODO: check
        from_schema: td:definesSecurityScheme
        required:
        multivalued: true
      schemaDefinitions:
        description: TODO CHECK
        multivalued: true
        range: DataSchema
      profile:
        description: >-
          Indicates the WoT Profile mechanisms followed by this Thing Description and the corresponding Thing implementation.
        from_schema: td:followsProfile
        multivalued: true
        range: anyUri
      instance:
        description: >-
          Provides a version identicator of this TD instance.
      created:
        from_schema: dcterms
        description: >-
          Provides information when the TD instance was created.
        range: datetime
      modified:
        from_schema: dcterms
        description: >-
          Provides information when the TD instance was last modified.
        range: datetime
      supportContact:
        description: >-
          Provides information about the TD maintainer as URI scheme (e.g., <code>mailto</code> [[RFC6068]],<code>tel</code> [[RFC3966]],<code>https</code> [[RFC9112]]).
        range: anyUri
        from_schema: schema:contactPoint
      base:
        description: >-
          Define the base URI that is used for all relative URI references throughout a TD document.
        from_schema: td:baseURI
        range: anyUri
      version:
        range: VersionInfo
      forms:
        from_schema: td:hasForm
        description: >-
          Set of form hypermedia controls that describe how an operation can be performed. Forms are serializations of
          Protocol Bindings.
        multivalued: true
        range: Form
      links:
        from_schema: td:hasLink
        description: >-
          Provides Web links to arbitrary resources that relate to the specified Thing Description.
        multivalued: true
        range: Link
      properties:
        description: >-
          All Property-based interaction affordances of the Thing.
        from_schema: td:hasPropertyAffordance
        multivalued: true
        inlined: true
        range: PropertyAffordance
      actions:
        description: >-
          All Action-based interaction affordances of the Thing.
        from_schema: td:hasActionAffordance
        multivalued: true
        inlined: true
        range: ActionAffordance
      events:
        description: >-
          All Event-based interaction affordances of the Thing.
        from_schema: td:hasEventAffordance
        multivalued: true
        inlined: true
        range: EventAffordance
    slots:
      - id
      - title
      - description
      - titles
      - descriptions
      - "@type"
      - titleInLanguage
      - descriptionInLanguage


enums:
  OperationTypes:
    description: >-
      Enumerations of well-known operation types necessary to implement the WoT interaction model.
    permissible_values:
      readproperty:
        description: Identifies the read operation on Property Affordances to retrieve the corresponding data.
        meaning: td:readProperty
      writeproperty:
        description: Identifies the write operation on Property Affordances to update the corresponding data.
        meaning: td:writeProperty
      observeproperty:
        description: Identifies the observe operation on Property Affordances to be notified with the new data when the Property is updated.
        meaning: td:observeProperty
      unobserveproperty:
        description: Identifies the unobserve operation on Property Affordances to stop the corresponding notifications.
        meaning: td:unobserveProperty
      invokeaction:
        description: Identifies the invoke operation on Action Affordances to perform the corresponding action.
        meaning: td:invokeAction
      queryaction:
        description: Identifies the querying operation on Action Affordances to get the status of the corresponding action.
        meaning: td:queryAction
      cancelaction:
        description: Identifies the cancel operation on Action Affordances to cancel the ongoing corresponding action.
        meaning: td:cancelAction
      subscribeevent:
        description: Identifies the subscribe operation on Event Affordances to be notified by the Thing when the event occurs.
        meaning: td:subscribeEvent
      unsubscribeevent:
        description: Identifies the unsubscribe operation on Event Affordances to stop the corresponding notifications.
        meaning: td:unsubscribeEvent
      readallproperties:
        description: Identifies the readallproperties operation on a Thing to retrieve the data of all Properties in a single interaction.
        meaning: td:readAllProperties
      writeallproperties:
        description: Identifies the writeallproperties operation on a Thing to update the data of all writable Properties in a single interaction.
        meaning: writeAllProperties
      readmultipleproperties:
        description: Identifies the readmultipleproperties operation on a Thing to retrieve the data of selected Properties in a single interaction.
        meaning: td:readMultipleProperties
      writemultipleproperties:
        description: Identifies the writemultipleproperties operation on a Thing to update the data of selected writable Properties in a single interaction.
        meaning: td:writeMultipleProperties
      observeallproperties:
        description: Identifies the observeallproperties operation on Properties to be notified with new data when any Property is updated.
        meaning: td:observeAllProperties
      unobserveallproperties:
        description: Identifies the unobserveallproperties operation on Properties to stop notifications from all Properties in a single interaction.
        meaning: td:unobserveAllProperties
      subscribeallevents:
        description: Identifies the subscribeallevents operation on Events to subscribe to notifications from all Events in a single interaction.
        meaning: td:subscribeAllEvents
      unsubscribeallevents:
        description: Identifies the unsubscribeallevents operation on Events to unsubscribe from notifications from all Events in a single interaction.
        meaning: td:unsubscribeAllEvents
      queryallactions:
        description: Identifies the queryallactions operation on a Thing to get the status of all Actions in a single interaction.
        meaning: td:queryAllActions
  SecuritySchemeType:
    permissible_values:
      nosec:
        description: A security configuration corresponding to identified by the Vocabulary Term nosec, indicating there is no authentication or other mechanism required to access the resource.
        meaning: wotsec:NoSecurityScheme
      combo:
        description: Elements of this scheme define various ways in which other named schemes defined in securityDefinitions, including other ComboSecurityScheme definitions, are to be combined to create a new scheme definition.
        meaning: wotsec:ComboSecurityScheme
      basic:
        description: Uses an unencrypted username and password.
        meaning: wotsec:BasicSecurityScheme
      digest:
        description: This scheme is similar to basic authentication but with added features to avoid man-in-the-middle attacks.
        meaning: wotsec:DigestSecurityScheme
      bearer:
        description: Bearer tokens are used independently of OAuth2.
        meaning: wotsec:BearerSecurityScheme
      psk:
        description: This is meant to identify that a standard is used for pre-shared keys such as TLS-PSK [RFC4279], and that the ciphersuite used for keys will be established during protocol negotiation.
        meaning: wotsec:PSKSecurityScheme
      oauth2:
        description: OAuth 2.0 authentication security configuration for systems conformant with [RFC6749] and [RFC8252].
        meaning: wotsec:OAuth2SecurityScheme
      apikey:
        description: This scheme is to be used when the access token is opaque.
        meaning: wotsec:APIKeySecurityScheme
      auto:
        description: This scheme indicates that the security parameters are going to be negotiated by the underlying protocols at runtime
        meaning: wotsec:AutoSecurityScheme

